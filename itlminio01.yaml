tenant:
  name: itlminio01
  image:
    repository: quay.io/minio/minio
    tag: RELEASE.2024-11-07T00-52-20Z
    pullPolicy: IfNotPresent
  imagePullSecret: { }
  initContainers: [ ]
  scheduler: { }
  configuration:
    name: itlminio01-env-configuration
  configSecret:
    name: itlminio01-env-secret
    existingSecret: false
  poolsMetadata:
    annotations: { }
    labels: { }
  pools:
    - servers: 1
      name: itlminio01-pool-0
      volumesPerServer: 1
      size: 1Gi
      storageClassName: openebs-hostpath
      storageAnnotations: { }
      storageLabels: { }
      annotations: { }
      labels: { }
      tolerations: [ ]
      nodeSelector:
        kubernetes.io/hostname: nwa04
      affinity: { }
      resources: { }
      securityContext:
        runAsUser: 1000
        runAsGroup: 1000
        fsGroup: 1000
        fsGroupChangePolicy: "OnRootMismatch"
        runAsNonRoot: true
      containerSecurityContext:
        runAsUser: 1000
        runAsGroup: 1000
        runAsNonRoot: true
        allowPrivilegeEscalation: false
        capabilities:
          drop:
            - ALL
        seccompProfile:
          type: RuntimeDefault
      topologySpreadConstraints: [ ]
  mountPath: /export
  subPath: /itlminio01
  metrics:
    enabled: false
    port: 9000
    protocol: http
  certificate:
    externalCaCertSecret: [ ]
    externalCertSecret: [ ]
    requestAutoCert: false
    certConfig: { }
  features:
    bucketDNS: false
    domains: { }
    enableSFTP: false
  buckets: [ ]
  users: [ ]
  podManagementPolicy: Parallel
  liveness: 
    initialDelaySeconds: 15
    periodSeconds: 15
    timeoutSeconds: 20
    successThreshold: 1
    failureThreshold: 3
    httpGet:
      path: /minio/health/live
      port: minio-port
      scheme: HTTP
      host: minio.itl-minio01.svc.cluster.local
  readiness: 
    initialDelaySeconds: 15
    periodSeconds: 15
    timeoutSeconds: 20
    successThreshold: 1
    failureThreshold: 3
    httpGet:
      path: /minio/health/cluster
      port: minio-port
      scheme: HTTP
      host: minio.itl-minio01.svc.cluster.local
  startup: { }
  lifecycle: { }
  exposeServices: { }
  serviceAccountName: ""
  prometheusOperator: false
  nodeSelector:
    kubernetes.io/hostname: nwa04
  logging: { }
  serviceMetadata: { }
  env: [ ]
  priorityClassName: ""
  additionalVolumes: [ ]
  additionalVolumeMounts: [ ]
ingress:
  api:
    enabled: true
    ingressClassName: ""
    labels: { }
    annotations: 
      traefik.ingress.kubernetes.io/router.entrypoints: web, websecure
      ingressClassName: "traefik"
      cert-manager.io/cluster-issuer: "letsencrypt-issuer"
    tls:
    - secretName: itlminio01-dev-itlusions-com-tls
      hosts:
        - itlminio01.dev.itlusions.com
    host: itlminio01.dev.itlusions.com
    path: /
    pathType: Prefix
  console:
    enabled: true
    ingressClassName: ""
    labels: { }
    annotations: 
      traefik.ingress.kubernetes.io/router.entrypoints: web, websecure
      ingressClassName: "traefik"
      cert-manager.io/cluster-issuer: "letsencrypt-issuer"
    tls:
    - secretName: itlminio01-console-dev-itlusions-com-tls
      hosts:
        - itlminio01-console.dev.itlusions.com
    host: itlminio01-console.dev.itlusions.com
    path: /
    pathType: Prefix