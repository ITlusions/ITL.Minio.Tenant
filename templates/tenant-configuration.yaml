{{- if (.Values.secrets) }}
{{- fail "# ERROR: '.secrets' is deprecated since v5.0.15 and has been removed. Please use '.tenant.configSecret' instead." }}
{{- else }}
{{- if not (.Values.tenant.configSecret) }}
{{- fail "# ERROR: '.tenant.configSecret' should be set." }}
{{- else }}
{{- if not (.Values.tenant.configSecret.existingSecret) }}
{{- $secretName := dig "tenant" "configSecret" "name" "" (.Values | merge (dict)) -}}

{{- $namespace := .Release.Namespace -}}
{{- $existingSecret := lookup "v1" "Secret" $namespace $secretName -}}

{{- if not $existingSecret }}
apiVersion: v1
kind: Secret
metadata:
  name: {{ dig "tenant" "configSecret" "name" "" (.Values | merge (dict)) }}
type: Opaque
stringData:
  config.env: |-
    export MINIO_ROOT_USER="nwa"
    export MINIO_ROOT_PASSWORD="{{ randAlphaNum 20 | b64enc }}"
    export CONSOLE_TLS_PORT="443"
    export CONSOLE_TLS_HOSTNAME="itlminio01-console.dev.itlusions.com"
    export MINIO_BROWSER_REDIRECT_URL="https://itlminio01-console.dev.itlusions.com/"

{{- else }}
{{- $existingSecret.data.config.env | b64dec | nindent 2 }}
{{- end }}


{{- else }}
{{- if (.Values.tenant.configSecret.accessKey) }}
{{- fail "# ERROR: cannot set access-key when an existing secret is used" }}
{{- end }}
{{- if (.Values.tenant.configSecret.secretKey) }}
{{- fail "# ERROR: cannot set secret-key when an existing secret is used" }}
{{- end }}
{{- end }}
{{- end }}
{{- end }}