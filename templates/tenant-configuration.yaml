{{- if (.Values.secrets) }}
{{- fail "# ERROR: '.secrets' is deprecated since v5.0.15 and has been removed. Please use '.tenant.configSecret' instead." }}
{{- else }}
{{- if not (.Values.tenant.configSecret) }}
{{- fail "# ERROR: '.tenant.configSecret' should be set." }}
{{- else }}
{{- if not (.Values.tenant.consoleTlsHostname) }}
{{- fail "# ERROR: '.tenant.consoleTlsHostname' should be set." }}
{{- else }}
{{- if not (.Values.tenant.minioBrowserRedirectUrl) }}
{{- fail "# ERROR: '.tenant.minioBrowserRedirectUrl' should be set." }}
{{- else }}
{{- if not (.Values.tenant.configSecret.existingSecret) }}
{{- $secretName := dig "tenant" "configSecret" "name" "" (.Values | merge (dict)) -}}
{{- $namespace := .Release.Namespace -}}
{{- $existingSecret := lookup "v1" "Secret" $namespace $secretName -}}
{{- $generatedConfigEnv := include "tenant.configEnv" . | nindent 4 -}}
{{- $existingConfigEnv := "" -}}
{{- if $existingSecret }}
  {{- if hasKey $existingSecret.data "config.env" }}
    {{- $existingConfigEnv = (index $existingSecret.data "config.env" | b64dec | nindent 4) }}
  {{- end }}
{{- end }}
{{- if not $existingSecret }}
# Secret does not exist, create it
apiVersion: v1
kind: Secret
metadata:
  name: {{ $secretName }}
  labels:
    app.kubernetes.io/instance: {{ .Values.tenant.name | default "minios3" | quote }}
type: Opaque
stringData:
  config.env: |-
{{ $generatedConfigEnv }}
{{- else if ne $generatedConfigEnv $existingConfigEnv }}
# Secret exists but content is different, update it
apiVersion: v1
kind: Secret
metadata:
  name: {{ $secretName }}
  labels:
    app.kubernetes.io/instance: {{ .Values.tenant.name | default "minios3" | quote }}
type: Opaque
stringData:
  config.env: |-
{{ $generatedConfigEnv }}
{{- end }}
{{- end }}
{{- end }}
{{- end }}
{{- end }}
{{- end }}